/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.bytatech.ayoos.appointment.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Appointment extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4585765183245671568L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Appointment\",\"namespace\":\"com.bytatech.ayoos.appointment.avro\",\"fields\":[{\"name\":\"trackingId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"appointmentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"chronicDiseaseRef\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"appointmentDateAndTime\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"note\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"patientId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"doctorId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"timing\",\"type\":{\"type\":\"record\",\"name\":\"Timing\",\"fields\":[{\"name\":\"day\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"startTime\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"endTime\",\"type\":\"long\",\"logicalType\":\"date\"}]}},{\"name\":\"consultationInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ConsultationInfo\",\"fields\":[{\"name\":\"height\",\"type\":\"float\"},{\"name\":\"weight\",\"type\":\"float\"},{\"name\":\"age\",\"type\":\"int\"},{\"name\":\"symptoms\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Symptom\",\"fields\":[{\"name\":\"ref\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"numberOfDaysSuffering\",\"type\":\"int\"}]}}}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Appointment> ENCODER =
      new BinaryMessageEncoder<Appointment>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Appointment> DECODER =
      new BinaryMessageDecoder<Appointment>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Appointment> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Appointment> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Appointment>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Appointment to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Appointment from a ByteBuffer. */
  public static Appointment fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String trackingId;
  @Deprecated public java.lang.String appointmentId;
  @Deprecated public java.lang.String chronicDiseaseRef;
  @Deprecated public long appointmentDateAndTime;
  @Deprecated public java.lang.String note;
  @Deprecated public java.lang.String patientId;
  @Deprecated public java.lang.String doctorId;
  @Deprecated public com.bytatech.ayoos.appointment.avro.Timing timing;
  @Deprecated public com.bytatech.ayoos.appointment.avro.ConsultationInfo consultationInfo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Appointment() {}

  /**
   * All-args constructor.
   * @param trackingId The new value for trackingId
   * @param appointmentId The new value for appointmentId
   * @param chronicDiseaseRef The new value for chronicDiseaseRef
   * @param appointmentDateAndTime The new value for appointmentDateAndTime
   * @param note The new value for note
   * @param patientId The new value for patientId
   * @param doctorId The new value for doctorId
   * @param timing The new value for timing
   * @param consultationInfo The new value for consultationInfo
   */
  public Appointment(java.lang.String trackingId, java.lang.String appointmentId, java.lang.String chronicDiseaseRef, java.lang.Long appointmentDateAndTime, java.lang.String note, java.lang.String patientId, java.lang.String doctorId, com.bytatech.ayoos.appointment.avro.Timing timing, com.bytatech.ayoos.appointment.avro.ConsultationInfo consultationInfo) {
    this.trackingId = trackingId;
    this.appointmentId = appointmentId;
    this.chronicDiseaseRef = chronicDiseaseRef;
    this.appointmentDateAndTime = appointmentDateAndTime;
    this.note = note;
    this.patientId = patientId;
    this.doctorId = doctorId;
    this.timing = timing;
    this.consultationInfo = consultationInfo;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return trackingId;
    case 1: return appointmentId;
    case 2: return chronicDiseaseRef;
    case 3: return appointmentDateAndTime;
    case 4: return note;
    case 5: return patientId;
    case 6: return doctorId;
    case 7: return timing;
    case 8: return consultationInfo;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: trackingId = (java.lang.String)value$; break;
    case 1: appointmentId = (java.lang.String)value$; break;
    case 2: chronicDiseaseRef = (java.lang.String)value$; break;
    case 3: appointmentDateAndTime = (java.lang.Long)value$; break;
    case 4: note = (java.lang.String)value$; break;
    case 5: patientId = (java.lang.String)value$; break;
    case 6: doctorId = (java.lang.String)value$; break;
    case 7: timing = (com.bytatech.ayoos.appointment.avro.Timing)value$; break;
    case 8: consultationInfo = (com.bytatech.ayoos.appointment.avro.ConsultationInfo)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'trackingId' field.
   * @return The value of the 'trackingId' field.
   */
  public java.lang.String getTrackingId() {
    return trackingId;
  }

  /**
   * Sets the value of the 'trackingId' field.
   * @param value the value to set.
   */
  public void setTrackingId(java.lang.String value) {
    this.trackingId = value;
  }

  /**
   * Gets the value of the 'appointmentId' field.
   * @return The value of the 'appointmentId' field.
   */
  public java.lang.String getAppointmentId() {
    return appointmentId;
  }

  /**
   * Sets the value of the 'appointmentId' field.
   * @param value the value to set.
   */
  public void setAppointmentId(java.lang.String value) {
    this.appointmentId = value;
  }

  /**
   * Gets the value of the 'chronicDiseaseRef' field.
   * @return The value of the 'chronicDiseaseRef' field.
   */
  public java.lang.String getChronicDiseaseRef() {
    return chronicDiseaseRef;
  }

  /**
   * Sets the value of the 'chronicDiseaseRef' field.
   * @param value the value to set.
   */
  public void setChronicDiseaseRef(java.lang.String value) {
    this.chronicDiseaseRef = value;
  }

  /**
   * Gets the value of the 'appointmentDateAndTime' field.
   * @return The value of the 'appointmentDateAndTime' field.
   */
  public java.lang.Long getAppointmentDateAndTime() {
    return appointmentDateAndTime;
  }

  /**
   * Sets the value of the 'appointmentDateAndTime' field.
   * @param value the value to set.
   */
  public void setAppointmentDateAndTime(java.lang.Long value) {
    this.appointmentDateAndTime = value;
  }

  /**
   * Gets the value of the 'note' field.
   * @return The value of the 'note' field.
   */
  public java.lang.String getNote() {
    return note;
  }

  /**
   * Sets the value of the 'note' field.
   * @param value the value to set.
   */
  public void setNote(java.lang.String value) {
    this.note = value;
  }

  /**
   * Gets the value of the 'patientId' field.
   * @return The value of the 'patientId' field.
   */
  public java.lang.String getPatientId() {
    return patientId;
  }

  /**
   * Sets the value of the 'patientId' field.
   * @param value the value to set.
   */
  public void setPatientId(java.lang.String value) {
    this.patientId = value;
  }

  /**
   * Gets the value of the 'doctorId' field.
   * @return The value of the 'doctorId' field.
   */
  public java.lang.String getDoctorId() {
    return doctorId;
  }

  /**
   * Sets the value of the 'doctorId' field.
   * @param value the value to set.
   */
  public void setDoctorId(java.lang.String value) {
    this.doctorId = value;
  }

  /**
   * Gets the value of the 'timing' field.
   * @return The value of the 'timing' field.
   */
  public com.bytatech.ayoos.appointment.avro.Timing getTiming() {
    return timing;
  }

  /**
   * Sets the value of the 'timing' field.
   * @param value the value to set.
   */
  public void setTiming(com.bytatech.ayoos.appointment.avro.Timing value) {
    this.timing = value;
  }

  /**
   * Gets the value of the 'consultationInfo' field.
   * @return The value of the 'consultationInfo' field.
   */
  public com.bytatech.ayoos.appointment.avro.ConsultationInfo getConsultationInfo() {
    return consultationInfo;
  }

  /**
   * Sets the value of the 'consultationInfo' field.
   * @param value the value to set.
   */
  public void setConsultationInfo(com.bytatech.ayoos.appointment.avro.ConsultationInfo value) {
    this.consultationInfo = value;
  }

  /**
   * Creates a new Appointment RecordBuilder.
   * @return A new Appointment RecordBuilder
   */
  public static com.bytatech.ayoos.appointment.avro.Appointment.Builder newBuilder() {
    return new com.bytatech.ayoos.appointment.avro.Appointment.Builder();
  }

  /**
   * Creates a new Appointment RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Appointment RecordBuilder
   */
  public static com.bytatech.ayoos.appointment.avro.Appointment.Builder newBuilder(com.bytatech.ayoos.appointment.avro.Appointment.Builder other) {
    return new com.bytatech.ayoos.appointment.avro.Appointment.Builder(other);
  }

  /**
   * Creates a new Appointment RecordBuilder by copying an existing Appointment instance.
   * @param other The existing instance to copy.
   * @return A new Appointment RecordBuilder
   */
  public static com.bytatech.ayoos.appointment.avro.Appointment.Builder newBuilder(com.bytatech.ayoos.appointment.avro.Appointment other) {
    return new com.bytatech.ayoos.appointment.avro.Appointment.Builder(other);
  }

  /**
   * RecordBuilder for Appointment instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Appointment>
    implements org.apache.avro.data.RecordBuilder<Appointment> {

    private java.lang.String trackingId;
    private java.lang.String appointmentId;
    private java.lang.String chronicDiseaseRef;
    private long appointmentDateAndTime;
    private java.lang.String note;
    private java.lang.String patientId;
    private java.lang.String doctorId;
    private com.bytatech.ayoos.appointment.avro.Timing timing;
    private com.bytatech.ayoos.appointment.avro.Timing.Builder timingBuilder;
    private com.bytatech.ayoos.appointment.avro.ConsultationInfo consultationInfo;
    private com.bytatech.ayoos.appointment.avro.ConsultationInfo.Builder consultationInfoBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.bytatech.ayoos.appointment.avro.Appointment.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.trackingId)) {
        this.trackingId = data().deepCopy(fields()[0].schema(), other.trackingId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.appointmentId)) {
        this.appointmentId = data().deepCopy(fields()[1].schema(), other.appointmentId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.chronicDiseaseRef)) {
        this.chronicDiseaseRef = data().deepCopy(fields()[2].schema(), other.chronicDiseaseRef);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.appointmentDateAndTime)) {
        this.appointmentDateAndTime = data().deepCopy(fields()[3].schema(), other.appointmentDateAndTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.note)) {
        this.note = data().deepCopy(fields()[4].schema(), other.note);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.patientId)) {
        this.patientId = data().deepCopy(fields()[5].schema(), other.patientId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.doctorId)) {
        this.doctorId = data().deepCopy(fields()[6].schema(), other.doctorId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.timing)) {
        this.timing = data().deepCopy(fields()[7].schema(), other.timing);
        fieldSetFlags()[7] = true;
      }
      if (other.hasTimingBuilder()) {
        this.timingBuilder = com.bytatech.ayoos.appointment.avro.Timing.newBuilder(other.getTimingBuilder());
      }
      if (isValidValue(fields()[8], other.consultationInfo)) {
        this.consultationInfo = data().deepCopy(fields()[8].schema(), other.consultationInfo);
        fieldSetFlags()[8] = true;
      }
      if (other.hasConsultationInfoBuilder()) {
        this.consultationInfoBuilder = com.bytatech.ayoos.appointment.avro.ConsultationInfo.newBuilder(other.getConsultationInfoBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Appointment instance
     * @param other The existing instance to copy.
     */
    private Builder(com.bytatech.ayoos.appointment.avro.Appointment other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.trackingId)) {
        this.trackingId = data().deepCopy(fields()[0].schema(), other.trackingId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.appointmentId)) {
        this.appointmentId = data().deepCopy(fields()[1].schema(), other.appointmentId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.chronicDiseaseRef)) {
        this.chronicDiseaseRef = data().deepCopy(fields()[2].schema(), other.chronicDiseaseRef);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.appointmentDateAndTime)) {
        this.appointmentDateAndTime = data().deepCopy(fields()[3].schema(), other.appointmentDateAndTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.note)) {
        this.note = data().deepCopy(fields()[4].schema(), other.note);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.patientId)) {
        this.patientId = data().deepCopy(fields()[5].schema(), other.patientId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.doctorId)) {
        this.doctorId = data().deepCopy(fields()[6].schema(), other.doctorId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.timing)) {
        this.timing = data().deepCopy(fields()[7].schema(), other.timing);
        fieldSetFlags()[7] = true;
      }
      this.timingBuilder = null;
      if (isValidValue(fields()[8], other.consultationInfo)) {
        this.consultationInfo = data().deepCopy(fields()[8].schema(), other.consultationInfo);
        fieldSetFlags()[8] = true;
      }
      this.consultationInfoBuilder = null;
    }

    /**
      * Gets the value of the 'trackingId' field.
      * @return The value.
      */
    public java.lang.String getTrackingId() {
      return trackingId;
    }

    /**
      * Sets the value of the 'trackingId' field.
      * @param value The value of 'trackingId'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setTrackingId(java.lang.String value) {
      validate(fields()[0], value);
      this.trackingId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'trackingId' field has been set.
      * @return True if the 'trackingId' field has been set, false otherwise.
      */
    public boolean hasTrackingId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'trackingId' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder clearTrackingId() {
      trackingId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'appointmentId' field.
      * @return The value.
      */
    public java.lang.String getAppointmentId() {
      return appointmentId;
    }

    /**
      * Sets the value of the 'appointmentId' field.
      * @param value The value of 'appointmentId'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setAppointmentId(java.lang.String value) {
      validate(fields()[1], value);
      this.appointmentId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'appointmentId' field has been set.
      * @return True if the 'appointmentId' field has been set, false otherwise.
      */
    public boolean hasAppointmentId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'appointmentId' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder clearAppointmentId() {
      appointmentId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'chronicDiseaseRef' field.
      * @return The value.
      */
    public java.lang.String getChronicDiseaseRef() {
      return chronicDiseaseRef;
    }

    /**
      * Sets the value of the 'chronicDiseaseRef' field.
      * @param value The value of 'chronicDiseaseRef'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setChronicDiseaseRef(java.lang.String value) {
      validate(fields()[2], value);
      this.chronicDiseaseRef = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'chronicDiseaseRef' field has been set.
      * @return True if the 'chronicDiseaseRef' field has been set, false otherwise.
      */
    public boolean hasChronicDiseaseRef() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'chronicDiseaseRef' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder clearChronicDiseaseRef() {
      chronicDiseaseRef = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'appointmentDateAndTime' field.
      * @return The value.
      */
    public java.lang.Long getAppointmentDateAndTime() {
      return appointmentDateAndTime;
    }

    /**
      * Sets the value of the 'appointmentDateAndTime' field.
      * @param value The value of 'appointmentDateAndTime'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setAppointmentDateAndTime(long value) {
      validate(fields()[3], value);
      this.appointmentDateAndTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'appointmentDateAndTime' field has been set.
      * @return True if the 'appointmentDateAndTime' field has been set, false otherwise.
      */
    public boolean hasAppointmentDateAndTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'appointmentDateAndTime' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder clearAppointmentDateAndTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'note' field.
      * @return The value.
      */
    public java.lang.String getNote() {
      return note;
    }

    /**
      * Sets the value of the 'note' field.
      * @param value The value of 'note'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setNote(java.lang.String value) {
      validate(fields()[4], value);
      this.note = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'note' field has been set.
      * @return True if the 'note' field has been set, false otherwise.
      */
    public boolean hasNote() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'note' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder clearNote() {
      note = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'patientId' field.
      * @return The value.
      */
    public java.lang.String getPatientId() {
      return patientId;
    }

    /**
      * Sets the value of the 'patientId' field.
      * @param value The value of 'patientId'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setPatientId(java.lang.String value) {
      validate(fields()[5], value);
      this.patientId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'patientId' field has been set.
      * @return True if the 'patientId' field has been set, false otherwise.
      */
    public boolean hasPatientId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'patientId' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder clearPatientId() {
      patientId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'doctorId' field.
      * @return The value.
      */
    public java.lang.String getDoctorId() {
      return doctorId;
    }

    /**
      * Sets the value of the 'doctorId' field.
      * @param value The value of 'doctorId'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setDoctorId(java.lang.String value) {
      validate(fields()[6], value);
      this.doctorId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'doctorId' field has been set.
      * @return True if the 'doctorId' field has been set, false otherwise.
      */
    public boolean hasDoctorId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'doctorId' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder clearDoctorId() {
      doctorId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'timing' field.
      * @return The value.
      */
    public com.bytatech.ayoos.appointment.avro.Timing getTiming() {
      return timing;
    }

    /**
      * Sets the value of the 'timing' field.
      * @param value The value of 'timing'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setTiming(com.bytatech.ayoos.appointment.avro.Timing value) {
      validate(fields()[7], value);
      this.timingBuilder = null;
      this.timing = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'timing' field has been set.
      * @return True if the 'timing' field has been set, false otherwise.
      */
    public boolean hasTiming() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'timing' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.bytatech.ayoos.appointment.avro.Timing.Builder getTimingBuilder() {
      if (timingBuilder == null) {
        if (hasTiming()) {
          setTimingBuilder(com.bytatech.ayoos.appointment.avro.Timing.newBuilder(timing));
        } else {
          setTimingBuilder(com.bytatech.ayoos.appointment.avro.Timing.newBuilder());
        }
      }
      return timingBuilder;
    }

    /**
     * Sets the Builder instance for the 'timing' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setTimingBuilder(com.bytatech.ayoos.appointment.avro.Timing.Builder value) {
      clearTiming();
      timingBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'timing' field has an active Builder instance
     * @return True if the 'timing' field has an active Builder instance
     */
    public boolean hasTimingBuilder() {
      return timingBuilder != null;
    }

    /**
      * Clears the value of the 'timing' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder clearTiming() {
      timing = null;
      timingBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'consultationInfo' field.
      * @return The value.
      */
    public com.bytatech.ayoos.appointment.avro.ConsultationInfo getConsultationInfo() {
      return consultationInfo;
    }

    /**
      * Sets the value of the 'consultationInfo' field.
      * @param value The value of 'consultationInfo'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setConsultationInfo(com.bytatech.ayoos.appointment.avro.ConsultationInfo value) {
      validate(fields()[8], value);
      this.consultationInfoBuilder = null;
      this.consultationInfo = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'consultationInfo' field has been set.
      * @return True if the 'consultationInfo' field has been set, false otherwise.
      */
    public boolean hasConsultationInfo() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'consultationInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.bytatech.ayoos.appointment.avro.ConsultationInfo.Builder getConsultationInfoBuilder() {
      if (consultationInfoBuilder == null) {
        if (hasConsultationInfo()) {
          setConsultationInfoBuilder(com.bytatech.ayoos.appointment.avro.ConsultationInfo.newBuilder(consultationInfo));
        } else {
          setConsultationInfoBuilder(com.bytatech.ayoos.appointment.avro.ConsultationInfo.newBuilder());
        }
      }
      return consultationInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'consultationInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder setConsultationInfoBuilder(com.bytatech.ayoos.appointment.avro.ConsultationInfo.Builder value) {
      clearConsultationInfo();
      consultationInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'consultationInfo' field has an active Builder instance
     * @return True if the 'consultationInfo' field has an active Builder instance
     */
    public boolean hasConsultationInfoBuilder() {
      return consultationInfoBuilder != null;
    }

    /**
      * Clears the value of the 'consultationInfo' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Appointment.Builder clearConsultationInfo() {
      consultationInfo = null;
      consultationInfoBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Appointment build() {
      try {
        Appointment record = new Appointment();
        record.trackingId = fieldSetFlags()[0] ? this.trackingId : (java.lang.String) defaultValue(fields()[0]);
        record.appointmentId = fieldSetFlags()[1] ? this.appointmentId : (java.lang.String) defaultValue(fields()[1]);
        record.chronicDiseaseRef = fieldSetFlags()[2] ? this.chronicDiseaseRef : (java.lang.String) defaultValue(fields()[2]);
        record.appointmentDateAndTime = fieldSetFlags()[3] ? this.appointmentDateAndTime : (java.lang.Long) defaultValue(fields()[3]);
        record.note = fieldSetFlags()[4] ? this.note : (java.lang.String) defaultValue(fields()[4]);
        record.patientId = fieldSetFlags()[5] ? this.patientId : (java.lang.String) defaultValue(fields()[5]);
        record.doctorId = fieldSetFlags()[6] ? this.doctorId : (java.lang.String) defaultValue(fields()[6]);
        if (timingBuilder != null) {
          record.timing = this.timingBuilder.build();
        } else {
          record.timing = fieldSetFlags()[7] ? this.timing : (com.bytatech.ayoos.appointment.avro.Timing) defaultValue(fields()[7]);
        }
        if (consultationInfoBuilder != null) {
          record.consultationInfo = this.consultationInfoBuilder.build();
        } else {
          record.consultationInfo = fieldSetFlags()[8] ? this.consultationInfo : (com.bytatech.ayoos.appointment.avro.ConsultationInfo) defaultValue(fields()[8]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Appointment>
    WRITER$ = (org.apache.avro.io.DatumWriter<Appointment>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Appointment>
    READER$ = (org.apache.avro.io.DatumReader<Appointment>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

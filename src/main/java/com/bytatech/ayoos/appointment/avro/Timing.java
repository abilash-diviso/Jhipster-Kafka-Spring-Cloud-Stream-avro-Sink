/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.bytatech.ayoos.appointment.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Timing extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -287200041127520600L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Timing\",\"namespace\":\"com.bytatech.ayoos.appointment.avro\",\"fields\":[{\"name\":\"day\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"startTime\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"endTime\",\"type\":\"long\",\"logicalType\":\"date\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Timing> ENCODER =
      new BinaryMessageEncoder<Timing>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Timing> DECODER =
      new BinaryMessageDecoder<Timing>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Timing> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Timing> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Timing>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Timing to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Timing from a ByteBuffer. */
  public static Timing fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long day;
  @Deprecated public long startTime;
  @Deprecated public long endTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Timing() {}

  /**
   * All-args constructor.
   * @param day The new value for day
   * @param startTime The new value for startTime
   * @param endTime The new value for endTime
   */
  public Timing(java.lang.Long day, java.lang.Long startTime, java.lang.Long endTime) {
    this.day = day;
    this.startTime = startTime;
    this.endTime = endTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return day;
    case 1: return startTime;
    case 2: return endTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: day = (java.lang.Long)value$; break;
    case 1: startTime = (java.lang.Long)value$; break;
    case 2: endTime = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'day' field.
   * @return The value of the 'day' field.
   */
  public java.lang.Long getDay() {
    return day;
  }

  /**
   * Sets the value of the 'day' field.
   * @param value the value to set.
   */
  public void setDay(java.lang.Long value) {
    this.day = value;
  }

  /**
   * Gets the value of the 'startTime' field.
   * @return The value of the 'startTime' field.
   */
  public java.lang.Long getStartTime() {
    return startTime;
  }

  /**
   * Sets the value of the 'startTime' field.
   * @param value the value to set.
   */
  public void setStartTime(java.lang.Long value) {
    this.startTime = value;
  }

  /**
   * Gets the value of the 'endTime' field.
   * @return The value of the 'endTime' field.
   */
  public java.lang.Long getEndTime() {
    return endTime;
  }

  /**
   * Sets the value of the 'endTime' field.
   * @param value the value to set.
   */
  public void setEndTime(java.lang.Long value) {
    this.endTime = value;
  }

  /**
   * Creates a new Timing RecordBuilder.
   * @return A new Timing RecordBuilder
   */
  public static com.bytatech.ayoos.appointment.avro.Timing.Builder newBuilder() {
    return new com.bytatech.ayoos.appointment.avro.Timing.Builder();
  }

  /**
   * Creates a new Timing RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Timing RecordBuilder
   */
  public static com.bytatech.ayoos.appointment.avro.Timing.Builder newBuilder(com.bytatech.ayoos.appointment.avro.Timing.Builder other) {
    return new com.bytatech.ayoos.appointment.avro.Timing.Builder(other);
  }

  /**
   * Creates a new Timing RecordBuilder by copying an existing Timing instance.
   * @param other The existing instance to copy.
   * @return A new Timing RecordBuilder
   */
  public static com.bytatech.ayoos.appointment.avro.Timing.Builder newBuilder(com.bytatech.ayoos.appointment.avro.Timing other) {
    return new com.bytatech.ayoos.appointment.avro.Timing.Builder(other);
  }

  /**
   * RecordBuilder for Timing instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Timing>
    implements org.apache.avro.data.RecordBuilder<Timing> {

    private long day;
    private long startTime;
    private long endTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.bytatech.ayoos.appointment.avro.Timing.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.day)) {
        this.day = data().deepCopy(fields()[0].schema(), other.day);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startTime)) {
        this.startTime = data().deepCopy(fields()[1].schema(), other.startTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.endTime)) {
        this.endTime = data().deepCopy(fields()[2].schema(), other.endTime);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Timing instance
     * @param other The existing instance to copy.
     */
    private Builder(com.bytatech.ayoos.appointment.avro.Timing other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.day)) {
        this.day = data().deepCopy(fields()[0].schema(), other.day);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startTime)) {
        this.startTime = data().deepCopy(fields()[1].schema(), other.startTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.endTime)) {
        this.endTime = data().deepCopy(fields()[2].schema(), other.endTime);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'day' field.
      * @return The value.
      */
    public java.lang.Long getDay() {
      return day;
    }

    /**
      * Sets the value of the 'day' field.
      * @param value The value of 'day'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Timing.Builder setDay(long value) {
      validate(fields()[0], value);
      this.day = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'day' field has been set.
      * @return True if the 'day' field has been set, false otherwise.
      */
    public boolean hasDay() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'day' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Timing.Builder clearDay() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'startTime' field.
      * @return The value.
      */
    public java.lang.Long getStartTime() {
      return startTime;
    }

    /**
      * Sets the value of the 'startTime' field.
      * @param value The value of 'startTime'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Timing.Builder setStartTime(long value) {
      validate(fields()[1], value);
      this.startTime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'startTime' field has been set.
      * @return True if the 'startTime' field has been set, false otherwise.
      */
    public boolean hasStartTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'startTime' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Timing.Builder clearStartTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'endTime' field.
      * @return The value.
      */
    public java.lang.Long getEndTime() {
      return endTime;
    }

    /**
      * Sets the value of the 'endTime' field.
      * @param value The value of 'endTime'.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Timing.Builder setEndTime(long value) {
      validate(fields()[2], value);
      this.endTime = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'endTime' field has been set.
      * @return True if the 'endTime' field has been set, false otherwise.
      */
    public boolean hasEndTime() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'endTime' field.
      * @return This builder.
      */
    public com.bytatech.ayoos.appointment.avro.Timing.Builder clearEndTime() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Timing build() {
      try {
        Timing record = new Timing();
        record.day = fieldSetFlags()[0] ? this.day : (java.lang.Long) defaultValue(fields()[0]);
        record.startTime = fieldSetFlags()[1] ? this.startTime : (java.lang.Long) defaultValue(fields()[1]);
        record.endTime = fieldSetFlags()[2] ? this.endTime : (java.lang.Long) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Timing>
    WRITER$ = (org.apache.avro.io.DatumWriter<Timing>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Timing>
    READER$ = (org.apache.avro.io.DatumReader<Timing>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
